2025-10-14 16:42:37.842 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 16:42:38.080 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 16:42:38.084 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 16:42:38.173 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 16:42:38.175 +07:00 [INF] Hosting environment: Development
2025-10-14 16:42:38.178 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 16:42:38.725 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 16:42:38.901 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 182.1982ms
2025-10-14 16:42:38.916 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 16:42:38.927 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 11.3794ms
2025-10-14 16:42:39.362 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 16:42:39.405 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 42.6044ms
2025-10-14 16:42:39.625 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 16:42:39.660 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.908ms
2025-10-14 16:43:12.648 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 61
2025-10-14 16:43:12.664 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 16:43:12.739 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 16:43:12.791 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CollabSphere.Application.DTOs.User.LoginRequestDTO) on controller CollabSphere.API.Controllers.AuthController (CollabSphere.API).
2025-10-14 16:43:12.802 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 16:43:17.631 +07:00 [INF] Executed DbCommand (130ms) [Parameters=[@__email_0='?', @__password_1='?'], CommandType='"Text"', CommandTimeout='30']
2025-10-14 12:03:46.583 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 12:03:46.889 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 12:03:46.891 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 12:03:46.962 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 12:03:46.964 +07:00 [INF] Hosting environment: Development
2025-10-14 12:03:46.966 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 12:03:47.586 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 12:03:47.816 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 12:03:47.817 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 240.2602ms
2025-10-14 12:03:47.825 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 9.3044ms
2025-10-14 12:03:47.923 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 12:03:47.996 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 72.8221ms
2025-10-14 12:03:48.020 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 12:03:48.042 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 22.345ms
2025-10-14 12:04:06.747 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 54
2025-10-14 12:04:06.765 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 12:04:09.300 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 12:04:09.352 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CollabSphere.Application.DTOs.User.LoginRequestDTO) on controller CollabSphere.API.Controllers.AuthController (CollabSphere.API).
2025-10-14 12:04:09.363 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 12:04:15.786 +07:00 [INF] Executed DbCommand (147ms) [Parameters=[@__email_0='?', @__password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
WHERE u.email = @__email_0 AND u.password = @__password_1 AND u.is_active
LIMIT 1
2025-10-14 16:43:17.654 +07:00 [INF] Not found any user with Email: triminh0502@gmail.com
2025-10-14 16:43:17.667 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'CollabSphere.Application.DTOs.User.LoginResponseDTO'.
2025-10-14 16:43:17.688 +07:00 [INF] Executed action CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API) in 4887.8105ms
2025-10-14 16:43:17.695 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 16:43:17.763 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 404 null application/json; charset=utf-8 5114.9542ms
2025-10-14 16:43:28.146 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 61
2025-10-14 16:43:28.154 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 16:43:28.158 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 16:43:28.159 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CollabSphere.Application.DTOs.User.LoginRequestDTO) on controller CollabSphere.API.Controllers.AuthController (CollabSphere.API).
2025-10-14 16:43:28.296 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[@__email_0='?', @__password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
WHERE u.email = @__email_0 AND u.password = @__password_1 AND u.is_active
LIMIT 1
2025-10-14 16:43:28.949 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[@p8='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = DateTime), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "user" SET created_date = @p0, email = @p1, is_active = @p2, is_teacher = @p3, password = @p4, refresh_token = @p5, refresh_token_expiry_time = @p6, role_id = @p7
WHERE u_id = @p8;
2025-10-14 16:43:29.069 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.DTOs.User.LoginResponseDTO'.
2025-10-14 16:43:29.075 +07:00 [INF] Executed action CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API) in 911.8891ms
2025-10-14 16:43:29.077 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 16:43:29.079 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 null application/json; charset=utf-8 933.7907ms
2025-10-14 16:43:52.820 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3 - null 0
2025-10-14 16:43:52.824 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 16:43:52.910 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:43:52.921 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 16:43:56.379 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c0.class_id, c0.class_name, c0.created_date, c0.enrol_key, c0.is_active, c0.lecturer_id, c0.lecturer_name, c0.member_count, c0.subject_id, c0.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN class_member AS c ON t.team_id = c.team_id
INNER JOIN class AS c0 ON t.class_id = c0.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
WHERE FALSE
2025-10-14 16:43:56.390 +07:00 [INF] Executing OkObjectResult, writing value of type 'null'.
2025-10-14 16:43:56.392 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 3468.4672ms
2025-10-14 16:43:56.394 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:43:56.396 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3 - 204 null null 3577.4566ms
2025-10-14 16:44:01.875 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3 - null 0
2025-10-14 16:44:01.889 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 16:44:01.893 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:44:01.896 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 16:44:25.687 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c0.class_id, c0.class_name, c0.created_date, c0.enrol_key, c0.is_active, c0.lecturer_id, c0.lecturer_name, c0.member_count, c0.subject_id, c0.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN class_member AS c ON t.team_id = c.team_id
INNER JOIN class AS c0 ON t.class_id = c0.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
WHERE FALSE
2025-10-14 16:46:17.602 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c0.class_id, c0.class_name, c0.created_date, c0.enrol_key, c0.is_active, c0.lecturer_id, c0.lecturer_name, c0.member_count, c0.subject_id, c0.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN class_member AS c ON t.team_id = c.team_id
INNER JOIN class AS c0 ON t.class_id = c0.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
WHERE FALSE
2025-10-14 16:46:17.606 +07:00 [INF] Executing OkObjectResult, writing value of type 'null'.
2025-10-14 16:46:17.613 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 135712.9497ms
2025-10-14 16:46:17.617 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:46:17.620 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3 - 204 null null 135744.5681ms
2025-10-14 16:46:36.623 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 16:46:36.853 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 16:46:36.856 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 16:46:36.922 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 16:46:36.924 +07:00 [INF] Hosting environment: Development
2025-10-14 16:46:36.925 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 16:46:37.596 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 16:46:37.777 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 188.9212ms
2025-10-14 16:46:37.903 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 16:46:37.903 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 16:46:37.914 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 11.5341ms
2025-10-14 16:46:37.953 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 49.9882ms
2025-10-14 16:46:37.977 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 16:46:37.999 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 23.066ms
2025-10-14 16:46:52.382 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3 - null 0
2025-10-14 16:46:52.407 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 16:46:52.629 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:46:52.684 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 16:46:52.691 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 16:48:11.206 +07:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c0.class_id, c0.class_name, c0.created_date, c0.enrol_key, c0.is_active, c0.lecturer_id, c0.lecturer_name, c0.member_count, c0.subject_id, c0.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN class_member AS c ON t.team_id = c.team_id
INNER JOIN class AS c0 ON t.class_id = c0.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
WHERE FALSE
2025-10-14 16:48:16.920 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 16:48:16.935 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 84246.9438ms
2025-10-14 16:48:16.941 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:48:16.947 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3 - 200 null application/json; charset=utf-8 84565.5135ms
2025-10-14 16:50:58.322 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 16:50:58.552 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 16:50:58.555 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 16:50:58.627 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 16:50:58.630 +07:00 [INF] Hosting environment: Development
2025-10-14 16:50:58.632 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 16:50:58.999 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 16:50:59.163 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 171.3969ms
2025-10-14 16:50:59.167 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 16:50:59.178 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 11.1524ms
2025-10-14 16:50:59.273 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 16:50:59.318 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 45.1622ms
2025-10-14 16:50:59.359 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 16:50:59.376 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 18.0157ms
2025-10-14 16:51:18.961 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3 - null 0
2025-10-14 16:51:18.972 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 16:51:19.142 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:51:19.199 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 16:51:19.206 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 16:51:49.050 +07:00 [INF] Executed DbCommand (92ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c0.class_id, c0.class_name, c0.created_date, c0.enrol_key, c0.is_active, c0.lecturer_id, c0.lecturer_name, c0.member_count, c0.subject_id, c0.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN class_member AS c ON t.team_id = c.team_id
INNER JOIN class AS c0 ON t.class_id = c0.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
2025-10-14 16:53:36.124 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 16:53:36.137 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 136933.2857ms
2025-10-14 16:53:36.141 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:53:36.147 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3 - 200 null application/json; charset=utf-8 137186.7491ms
2025-10-14 16:54:33.253 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3 - null 0
2025-10-14 16:54:33.272 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 16:54:33.280 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:54:33.284 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 16:54:47.593 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN class AS c ON t.class_id = c.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
2025-10-14 16:54:59.075 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN class AS c ON t.class_id = c.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
2025-10-14 16:55:46.105 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
2025-10-14 16:55:55.701 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN class AS c ON t.class_id = c.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
2025-10-14 16:55:56.864 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN class AS c ON t.class_id = c.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
2025-10-14 16:56:02.275 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
2025-10-14 16:56:57.997 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c0.class_id, c0.class_name, c0.created_date, c0.enrol_key, c0.is_active, c0.lecturer_id, c0.lecturer_name, c0.member_count, c0.subject_id, c0.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN class_member AS c ON t.team_id = c.team_id
INNER JOIN class AS c0 ON t.class_id = c0.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
2025-10-14 16:56:59.660 +07:00 [ERR] Error occurred while getting teams of student with ID: 3
System.NullReferenceException: Object reference not set to an instance of an object.
   at CollabSphere.Application.Mappings.Team.TeamMapping.ListTeam_To_AllTeamOfStudentDto(List`1 list) in D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.Application\Mappings\Team\TeamMapping.cs:line 28
   at CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentHandler.HandleCommand(GetAllTeamOfStudentQuery request, CancellationToken cancellationToken) in D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.Application\Features\Team\Queries\GetAllTeamOfStudent\GetAllTeamOfStudentHandler.cs:line 47
2025-10-14 16:56:59.734 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 16:56:59.738 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 146450.7379ms
2025-10-14 16:56:59.752 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:56:59.754 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3 - 500 null application/json; charset=utf-8 146502.3563ms
2025-10-14 16:57:02.994 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3 - null 0
2025-10-14 16:57:03.001 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 16:57:03.008 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:57:03.011 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 16:57:13.592 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
2025-10-14 16:57:44.073 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
2025-10-14 16:58:13.313 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c0.class_id, c0.class_name, c0.created_date, c0.enrol_key, c0.is_active, c0.lecturer_id, c0.lecturer_name, c0.member_count, c0.subject_id, c0.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN class_member AS c ON t.team_id = c.team_id
INNER JOIN class AS c0 ON t.class_id = c0.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
2025-10-14 16:58:13.916 +07:00 [ERR] Error occurred while getting teams of student with ID: 3
System.NullReferenceException: Object reference not set to an instance of an object.
   at CollabSphere.Application.Mappings.Team.TeamMapping.ListTeam_To_AllTeamOfStudentDto(List`1 list) in D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.Application\Mappings\Team\TeamMapping.cs:line 28
   at CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentHandler.HandleCommand(GetAllTeamOfStudentQuery request, CancellationToken cancellationToken) in D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.Application\Features\Team\Queries\GetAllTeamOfStudent\GetAllTeamOfStudentHandler.cs:line 47
2025-10-14 16:58:13.918 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 16:58:13.919 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 70904.9154ms
2025-10-14 16:58:13.925 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 16:58:13.926 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3 - 500 null application/json; charset=utf-8 70933.0926ms
2025-10-14 17:02:35.599 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 17:02:35.809 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 17:02:35.810 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 17:02:35.883 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 17:02:35.884 +07:00 [INF] Hosting environment: Development
2025-10-14 17:02:35.886 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 17:02:36.492 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 17:02:36.657 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 169.8563ms
2025-10-14 17:02:36.660 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 17:02:36.672 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 12.4701ms
2025-10-14 17:02:36.767 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 17:02:36.804 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.676ms
2025-10-14 17:02:36.847 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 17:02:36.876 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 29.2788ms
2025-10-14 17:03:08.496 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3 - null 0
2025-10-14 17:03:08.518 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:03:08.717 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:03:08.764 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:03:08.771 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 17:03:23.659 +07:00 [INF] Executed DbCommand (86ms) [Parameters=[@__studentId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL
2025-10-14 17:03:28.811 +07:00 [INF] Executed DbCommand (61ms) [Parameters=[@__studentId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
2025-10-14 17:03:57.562 +07:00 [ERR] Error occurred while getting teams of student with ID: 3
System.NullReferenceException: Object reference not set to an instance of an object.
   at CollabSphere.Application.Mappings.Team.TeamMapping.ListTeam_To_AllTeamOfStudentDto(List`1 list) in D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.Application\Mappings\Team\TeamMapping.cs:line 28
   at CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentHandler.HandleCommand(GetAllTeamOfStudentQuery request, CancellationToken cancellationToken) in D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.Application\Features\Team\Queries\GetAllTeamOfStudent\GetAllTeamOfStudentHandler.cs:line 47
2025-10-14 17:03:57.601 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:03:57.615 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 48845.612ms
2025-10-14 17:03:57.619 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:03:57.623 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3 - 500 null application/json; charset=utf-8 49129.9194ms
2025-10-14 17:04:01.896 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3 - null 0
2025-10-14 17:04:01.901 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:04:01.904 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:04:01.907 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:04:10.881 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[@__studentId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
2025-10-14 17:05:38.665 +07:00 [ERR] Error occurred while getting teams of student with ID: 3
System.NullReferenceException: Object reference not set to an instance of an object.
   at CollabSphere.Application.Mappings.Team.TeamMapping.ListTeam_To_AllTeamOfStudentDto(List`1 list) in D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.Application\Mappings\Team\TeamMapping.cs:line 28
   at CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentHandler.HandleCommand(GetAllTeamOfStudentQuery request, CancellationToken cancellationToken) in D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.Application\Features\Team\Queries\GetAllTeamOfStudent\GetAllTeamOfStudentHandler.cs:line 47
2025-10-14 17:05:38.668 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:05:38.670 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 96760.9916ms
2025-10-14 17:05:38.675 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:05:38.677 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3 - 500 null application/json; charset=utf-8 96781.4936ms
2025-10-14 17:05:57.937 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 17:05:58.130 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 17:05:58.132 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 17:05:58.198 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 17:05:58.199 +07:00 [INF] Hosting environment: Development
2025-10-14 17:05:58.201 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 17:05:58.370 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 17:05:58.517 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 152.9362ms
2025-10-14 17:05:58.520 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 17:05:58.533 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 12.5589ms
2025-10-14 17:05:58.625 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 17:05:58.659 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 34.1948ms
2025-10-14 17:05:58.701 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 17:05:58.723 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 22.2429ms
2025-10-14 17:06:16.227 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3 - null 0
2025-10-14 17:06:16.243 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:06:16.487 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:06:16.537 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:06:16.545 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 17:06:23.449 +07:00 [INF] Executed DbCommand (80ms) [Parameters=[@__studentId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
2025-10-14 17:06:23.487 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:06:23.511 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 6968.7046ms
2025-10-14 17:06:23.519 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:06:23.524 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3 - 200 null application/json; charset=utf-8 7297.152ms
2025-10-14 17:10:12.913 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 17:10:13.015 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 17:10:13.017 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 17:10:13.081 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 17:10:13.083 +07:00 [INF] Hosting environment: Development
2025-10-14 17:10:13.084 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 17:10:13.215 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 17:10:13.317 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 103.2384ms
2025-10-14 17:10:13.320 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 17:10:13.328 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 8.2416ms
2025-10-14 17:10:13.429 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 17:10:13.463 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 34.1615ms
2025-10-14 17:10:13.506 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 17:10:13.521 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 15.2946ms
2025-10-14 17:10:30.967 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/1212 - null 0
2025-10-14 17:10:30.980 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:10:31.087 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:10:31.123 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:10:31.131 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 17:10:34.314 +07:00 [INF] Executed DbCommand (121ms) [Parameters=[@__studentId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
2025-10-14 17:10:34.348 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:10:34.375 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 3242.6764ms
2025-10-14 17:10:34.381 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:10:34.392 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/1212 - 200 null application/json; charset=utf-8 3424.8773ms
2025-10-14 17:11:47.817 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 17:11:47.924 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 17:11:47.927 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 17:11:47.979 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 17:11:47.983 +07:00 [INF] Hosting environment: Development
2025-10-14 17:11:47.986 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 17:11:48.180 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 17:11:48.285 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 106.9114ms
2025-10-14 17:11:48.290 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 17:11:48.301 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 11.0208ms
2025-10-14 17:11:48.403 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 17:11:48.426 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.5139ms
2025-10-14 17:11:48.479 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 17:11:48.495 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 15.7625ms
2025-10-14 17:12:01.498 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3 - null 0
2025-10-14 17:12:01.515 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:12:01.643 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:01.682 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:12:01.689 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 17:12:04.516 +07:00 [INF] Executed DbCommand (122ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:12:04.834 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[@__studentId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
2025-10-14 17:12:04.865 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:12:04.899 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 3207.8749ms
2025-10-14 17:12:04.902 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:04.910 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3 - 200 null application/json; charset=utf-8 3411.7371ms
2025-10-14 17:12:09.432 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3123 - null 0
2025-10-14 17:12:09.442 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:12:09.450 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:09.453 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:12:09.610 +07:00 [INF] Executed DbCommand (65ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:12:09.617 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:12:09.621 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 164.6002ms
2025-10-14 17:12:09.624 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:09.625 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3123 - 500 null application/json; charset=utf-8 193.3126ms
2025-10-14 17:12:17.770 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1111 - null 0
2025-10-14 17:12:17.776 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:12:17.784 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:17.785 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:12:17.876 +07:00 [INF] Executed DbCommand (57ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:12:17.984 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 17:12:18.156 +07:00 [INF] Executed DbCommand (93ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 12:04:16.633 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[@p8='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = DateTime), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "user" SET created_date = @p0, email = @p1, is_active = @p2, is_teacher = @p3, password = @p4, refresh_token = @p5, refresh_token_expiry_time = @p6, role_id = @p7
WHERE u_id = @p8;
2025-10-14 12:04:16.795 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.DTOs.User.LoginResponseDTO'.
2025-10-14 12:04:16.822 +07:00 [INF] Executed action CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API) in 7460.9664ms
2025-10-14 12:04:16.828 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 12:04:16.840 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 null application/json; charset=utf-8 10093.8394ms
2025-10-14 12:04:42.977 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/2 - null 0
2025-10-14 12:04:42.995 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 12:04:43.080 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 12:04:43.099 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 12:05:00.134 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 12:05:00.253 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 12:05:17.148 +07:00 [INF] Executed DbCommand (55ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 12:05:17.161 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 12:05:17.181 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 34076.2617ms
2025-10-14 12:05:17.185 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 12:05:17.188 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/2 - 200 null application/json; charset=utf-8 34211.2569ms
2025-10-14 12:06:45.230 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/2 - null 0
2025-10-14 12:06:45.248 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 12:06:45.256 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 12:06:45.259 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 12:06:50.380 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 12:07:19.243 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 12:07:19.246 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 12:07:19.248 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 33984.6902ms
2025-10-14 12:07:19.249 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 12:07:19.251 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/2 - 200 null application/json; charset=utf-8 34020.644ms
2025-10-14 12:07:48.816 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/1 - null 0
2025-10-14 12:07:48.842 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 12:07:48.846 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 12:07:48.848 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 12:07:50.078 +07:00 [INF] Executed DbCommand (54ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 12:07:50.221 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 12:07:50.229 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 12:07:50.240 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 1389.7337ms
2025-10-14 12:07:50.242 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 12:07:50.244 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/1 - 200 null application/json; charset=utf-8 1428.1447ms
2025-10-14 14:52:36.300 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 14:52:36.572 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 14:52:36.574 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 14:52:36.634 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 14:52:36.636 +07:00 [INF] Hosting environment: Development
2025-10-14 14:52:36.637 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 14:52:36.989 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 14:52:37.156 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 175.8717ms
2025-10-14 14:52:37.160 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 14:52:37.172 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 11.8947ms
2025-10-14 14:52:37.265 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 14:52:37.303 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 38.7811ms
2025-10-14 14:52:37.344 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 14:52:37.365 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 21.5315ms
2025-10-14 14:52:51.052 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 54
2025-10-14 14:52:51.064 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 14:52:53.344 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 14:52:53.399 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CollabSphere.Application.DTOs.User.LoginRequestDTO) on controller CollabSphere.API.Controllers.AuthController (CollabSphere.API).
2025-10-14 14:52:53.411 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 14:53:00.925 +07:00 [INF] Executed DbCommand (181ms) [Parameters=[@__email_0='?', @__password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
WHERE u.email = @__email_0 AND u.password = @__password_1 AND u.is_active
LIMIT 1
2025-10-14 14:53:01.717 +07:00 [INF] Executed DbCommand (58ms) [Parameters=[@p8='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = DateTime), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "user" SET created_date = @p0, email = @p1, is_active = @p2, is_teacher = @p3, password = @p4, refresh_token = @p5, refresh_token_expiry_time = @p6, role_id = @p7
WHERE u_id = @p8;
2025-10-14 14:53:01.908 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.DTOs.User.LoginResponseDTO'.
2025-10-14 14:53:01.935 +07:00 [INF] Executed action CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API) in 8524.6866ms
2025-10-14 14:53:01.941 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 14:53:01.951 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 null application/json; charset=utf-8 10898.729ms
2025-10-14 14:53:29.454 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/111 - null 0
2025-10-14 14:53:29.468 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 14:53:29.539 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:53:29.552 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 14:53:34.522 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 14:53:34.735 +07:00 [INF] Executed DbCommand (117ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:12:18.165 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:12:18.167 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 378.679ms
2025-10-14 17:12:18.169 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:18.171 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1111 - 500 null application/json; charset=utf-8 401.4885ms
2025-10-14 17:12:20.909 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1 - null 0
2025-10-14 17:12:20.916 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:12:20.917 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:20.921 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:12:20.982 +07:00 [INF] Executed DbCommand (54ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:12:21.086 +07:00 [INF] Executed DbCommand (95ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 14:53:34.747 +07:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-10-14 14:53:34.749 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 5190.0069ms
2025-10-14 14:53:34.754 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:53:34.755 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/111 - 500 0 text/plain; charset=utf-8 5302.1597ms
2025-10-14 14:54:42.979 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/111 - null 0
2025-10-14 14:54:42.993 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 14:54:42.999 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:54:43.001 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 14:55:04.409 +07:00 [INF] Executed DbCommand (70ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 14:55:11.589 +07:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-10-14 14:55:11.591 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 28586.9685ms
2025-10-14 14:55:11.593 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:55:11.595 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/111 - 500 0 text/plain; charset=utf-8 28616.3885ms
2025-10-14 14:55:14.528 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/111 - null 0
2025-10-14 14:55:14.533 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 14:55:14.540 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:55:14.544 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 14:55:21.211 +07:00 [INF] Executed DbCommand (64ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 14:55:36.100 +07:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-10-14 14:55:36.105 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 21556.6488ms
2025-10-14 14:55:36.107 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:55:36.108 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/111 - 500 0 text/plain; charset=utf-8 21580.874ms
2025-10-14 14:55:42.232 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 14:55:42.437 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 14:55:42.440 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 14:55:42.500 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 14:55:42.501 +07:00 [INF] Hosting environment: Development
2025-10-14 14:55:42.503 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 14:55:42.815 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 14:55:42.968 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 159.3505ms
2025-10-14 14:55:42.975 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 14:55:42.988 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 12.657ms
2025-10-14 14:55:43.081 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 14:55:43.118 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.0702ms
2025-10-14 14:55:43.158 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 14:55:43.182 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 24.0129ms
2025-10-14 14:55:58.796 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/2111 - null 0
2025-10-14 14:55:58.810 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 14:55:58.979 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:55:59.019 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 14:55:59.047 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 14:56:04.294 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 14:56:05.271 +07:00 [INF] Executed DbCommand (93ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:12:21.390 +07:00 [INF] Executed DbCommand (103ms) [Parameters=[@__studentId_0='?' (DbType = Int32), @__classId_Value_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_1
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
2025-10-14 17:12:21.400 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:12:21.404 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 479.9745ms
2025-10-14 17:12:21.408 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:21.411 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1 - 200 null application/json; charset=utf-8 501.7261ms
2025-10-14 17:12:24.108 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=aaaaa&ClassId=1 - null 0
2025-10-14 17:12:24.110 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:12:24.112 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:24.116 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:12:24.171 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:12:24.228 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 14:56:29.385 +07:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-10-14 14:56:29.390 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 30344.9745ms
2025-10-14 14:56:29.393 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:56:29.399 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/2111 - 500 0 text/plain; charset=utf-8 30602.9621ms
2025-10-14 14:57:21.152 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 14:57:21.351 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 14:57:21.353 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 14:57:21.421 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 14:57:21.423 +07:00 [INF] Hosting environment: Development
2025-10-14 14:57:21.424 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 14:57:22.009 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 14:57:22.160 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 158.6744ms
2025-10-14 14:57:22.164 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 14:57:22.176 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 12.6251ms
2025-10-14 14:57:22.274 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 14:57:22.308 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 34.8278ms
2025-10-14 14:57:22.351 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 14:57:22.374 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 23.4936ms
2025-10-14 14:57:37.783 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/123123 - null 0
2025-10-14 14:57:37.802 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 14:57:38.055 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:57:38.118 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 14:57:38.128 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 14:57:44.792 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 14:57:45.857 +07:00 [INF] Executed DbCommand (88ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 14:58:14.274 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 14:58:14.491 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 14:58:14.493 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 14:58:14.561 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 14:58:14.563 +07:00 [INF] Hosting environment: Development
2025-10-14 14:58:14.564 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 14:58:15.081 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 14:58:15.239 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 164.7053ms
2025-10-14 14:58:15.243 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 14:58:15.253 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 10.0264ms
2025-10-14 14:58:15.350 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 14:58:15.393 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 43.9011ms
2025-10-14 14:58:15.429 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 14:58:15.466 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 37.1107ms
2025-10-14 14:58:32.017 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/123123 - null 0
2025-10-14 14:58:32.032 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 14:58:32.221 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:58:32.286 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 14:58:32.302 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 14:58:39.553 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 14:58:40.642 +07:00 [INF] Executed DbCommand (153ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 14:58:48.000 +07:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-10-14 14:58:48.008 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 15713.6946ms
2025-10-14 14:58:48.012 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:58:48.018 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/123123 - 500 0 text/plain; charset=utf-8 16001.4148ms
2025-10-14 14:58:55.427 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/123123 - null 0
2025-10-14 14:58:55.440 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 14:58:55.449 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:58:55.455 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 14:58:59.543 +07:00 [INF] Executed DbCommand (55ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 14:59:38.615 +07:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2025-10-14 14:59:38.620 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 43161.2502ms
2025-10-14 14:59:38.622 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 14:59:38.623 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/123123 - 500 0 text/plain; charset=utf-8 43196.2772ms
2025-10-14 14:59:49.926 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 14:59:50.109 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 14:59:50.111 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 14:59:50.167 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 14:59:50.169 +07:00 [INF] Hosting environment: Development
2025-10-14 14:59:50.169 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 14:59:50.411 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 14:59:50.559 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 152.9386ms
2025-10-14 14:59:50.564 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 14:59:50.573 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 9.2702ms
2025-10-14 14:59:50.670 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 14:59:50.707 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.3525ms
2025-10-14 14:59:50.749 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 14:59:50.774 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 25.4047ms
2025-10-14 15:00:02.080 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/123123 - null 0
2025-10-14 15:00:02.094 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:00:02.251 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:00:02.317 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:00:02.325 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 15:00:06.330 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 15:00:07.610 +07:00 [INF] Executed DbCommand (98ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 15:00:07.641 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassResult'.
2025-10-14 15:00:07.668 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 5345.9631ms
2025-10-14 15:00:07.674 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:00:07.681 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/123123 - 500 null application/json; charset=utf-8 5601.255ms
2025-10-14 15:00:15.539 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/1 - null 0
2025-10-14 15:00:15.546 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:00:15.549 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:00:15.551 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:00:17.377 +07:00 [INF] Executed DbCommand (67ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 15:00:17.616 +07:00 [INF] Executed DbCommand (55ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:00:17.632 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:00:17.642 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 2088.2202ms
2025-10-14 15:00:17.645 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:00:17.647 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/1 - 200 null application/json; charset=utf-8 2108.6412ms
2025-10-14 15:00:22.900 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/2 - null 0
2025-10-14 15:00:22.906 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:00:22.910 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:00:22.913 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:00:24.627 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:12:24.328 +07:00 [INF] Executed DbCommand (55ms) [Parameters=[@__studentId_1='?' (DbType = Int32), @__classId_Value_2='?' (DbType = Int32), @__teamName_0_contains='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_1 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_2
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
WHERE t.team_name LIKE @__teamName_0_contains
2025-10-14 17:12:24.336 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:12:24.340 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 220.6534ms
2025-10-14 17:12:24.345 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:24.346 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=aaaaa&ClassId=1 - 200 null application/json; charset=utf-8 238.5029ms
2025-10-14 17:12:37.757 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=Tes&ClassId=1 - null 0
2025-10-14 17:12:37.763 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:12:37.766 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:37.769 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:12:37.828 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:12:37.913 +07:00 [INF] Executed DbCommand (73ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 15:00:24.680 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:00:24.687 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:00:24.691 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 1774.9067ms
2025-10-14 15:00:24.694 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:00:24.698 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/2 - 200 null application/json; charset=utf-8 1798.7868ms
2025-10-14 15:00:35.290 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/3 - null 0
2025-10-14 15:00:35.302 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:00:35.305 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:00:35.309 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:00:36.897 +07:00 [INF] Executed DbCommand (65ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:12:37.969 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__studentId_1='?' (DbType = Int32), @__classId_Value_2='?' (DbType = Int32), @__teamName_0_contains='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_1 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_2
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
WHERE t.team_name LIKE @__teamName_0_contains
2025-10-14 17:12:37.972 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:12:37.974 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 200.4592ms
2025-10-14 17:12:37.978 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:37.979 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=Tes&ClassId=1 - 200 null application/json; charset=utf-8 221.9674ms
2025-10-14 17:12:42.765 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1 - null 0
2025-10-14 17:12:42.770 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:12:42.772 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:42.774 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:12:42.855 +07:00 [INF] Executed DbCommand (78ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:12:42.958 +07:00 [INF] Executed DbCommand (94ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 15:00:36.956 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:00:36.961 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:00:36.962 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 1649.9172ms
2025-10-14 15:00:36.963 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:00:36.964 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/3 - 200 null application/json; charset=utf-8 1674.1858ms
2025-10-14 15:00:40.613 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/4 - null 0
2025-10-14 15:00:40.618 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:00:40.622 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:00:40.623 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:00:42.132 +07:00 [INF] Executed DbCommand (116ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 15:00:42.141 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassResult'.
2025-10-14 15:00:42.144 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 1518.7892ms
2025-10-14 15:00:42.145 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:00:42.146 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/4 - 500 null application/json; charset=utf-8 1533.5283ms
2025-10-14 15:01:55.582 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/1 - null 0
2025-10-14 15:01:55.591 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:01:55.592 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:01:55.594 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:01:59.609 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:12:43.023 +07:00 [INF] Executed DbCommand (59ms) [Parameters=[@__studentId_0='?' (DbType = Int32), @__classId_Value_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_1
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
2025-10-14 17:12:43.032 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:12:43.040 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 263.305ms
2025-10-14 17:12:43.044 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:43.051 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1 - 200 null application/json; charset=utf-8 286.0756ms
2025-10-14 17:12:47.332 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=te&ClassId=1 - null 0
2025-10-14 17:12:47.336 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:12:47.338 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:47.339 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:12:47.392 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:12:47.449 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 15:01:59.659 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:01:59.665 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:01:59.669 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 4073.3676ms
2025-10-14 15:01:59.672 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:01:59.674 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/1 - 200 null application/json; charset=utf-8 4093.1573ms
2025-10-14 15:02:05.167 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/1?TeamName=aaaa - null 0
2025-10-14 15:02:05.170 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:02:05.171 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:02:05.173 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:02:05.313 +07:00 [INF] Executed DbCommand (131ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:12:47.505 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__studentId_1='?' (DbType = Int32), @__classId_Value_2='?' (DbType = Int32), @__teamName_0_contains='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_1 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_2
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
WHERE t.team_name LIKE @__teamName_0_contains
2025-10-14 17:12:47.508 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:12:47.509 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 167.6682ms
2025-10-14 17:12:47.512 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:12:47.514 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=te&ClassId=1 - 200 null application/json; charset=utf-8 182.0875ms
2025-10-14 17:13:18.515 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 17:13:18.616 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 17:13:18.619 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 17:13:18.683 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 17:13:18.684 +07:00 [INF] Hosting environment: Development
2025-10-14 17:13:18.686 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 17:13:19.123 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 17:13:19.237 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 115.4276ms
2025-10-14 17:13:19.242 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 17:13:19.251 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 8.7336ms
2025-10-14 17:13:19.352 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 17:13:19.389 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 37.5901ms
2025-10-14 17:13:19.428 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 17:13:19.442 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 14.6905ms
2025-10-14 17:13:38.189 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1 - null 0
2025-10-14 17:13:38.203 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:13:38.318 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:13:38.352 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:13:38.361 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 17:13:41.303 +07:00 [INF] Executed DbCommand (131ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:13:41.573 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 17:13:41.686 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 15:02:05.418 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__Trim_1_contains='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0 AND lower(t.team_name) LIKE @__Trim_1_contains
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:02:05.420 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:02:05.422 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 246.7703ms
2025-10-14 15:02:05.423 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:02:05.424 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/1?TeamName=aaaa - 200 null application/json; charset=utf-8 257.8767ms
2025-10-14 15:02:10.726 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/1?TeamName=tes - null 0
2025-10-14 15:02:10.734 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:02:10.735 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:02:10.736 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:02:10.831 +07:00 [INF] Executed DbCommand (89ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:13:42.042 +07:00 [INF] Executed DbCommand (56ms) [Parameters=[@__studentId_0='?' (DbType = Int32), @__classId_Value_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_1
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
2025-10-14 17:13:42.069 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:13:42.102 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 3741.7275ms
2025-10-14 17:13:42.106 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:13:42.118 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1 - 200 null application/json; charset=utf-8 3928.8172ms
2025-10-14 17:13:45.335 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=aaaa&ClassId=1 - null 0
2025-10-14 17:13:45.343 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:13:45.349 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:13:45.352 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:13:45.517 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:13:45.580 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 15:02:10.892 +07:00 [INF] Executed DbCommand (55ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__Trim_1_contains='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0 AND lower(t.team_name) LIKE @__Trim_1_contains
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:02:10.905 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:02:10.909 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 169.6316ms
2025-10-14 15:02:10.917 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:02:10.922 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/1?TeamName=tes - 200 null application/json; charset=utf-8 195.5399ms
2025-10-14 15:03:19.436 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/1?PageNum=2 - null 0
2025-10-14 15:03:19.453 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:03:19.456 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:03:19.458 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:03:19.512 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:13:45.699 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[@__studentId_1='?' (DbType = Int32), @__classId_Value_2='?' (DbType = Int32), @__Trim_0_contains='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_1 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_2
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
WHERE lower(t.team_name) LIKE @__Trim_0_contains
2025-10-14 17:13:45.707 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:13:45.711 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 356.2818ms
2025-10-14 17:13:45.714 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:13:45.716 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=aaaa&ClassId=1 - 200 null application/json; charset=utf-8 381.0586ms
2025-10-14 17:13:48.219 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=te&ClassId=1 - null 0
2025-10-14 17:13:48.224 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:13:48.231 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:13:48.238 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:13:48.327 +07:00 [INF] Executed DbCommand (56ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:13:48.386 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 15:03:19.564 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:03:19.575 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:03:19.579 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 117.4931ms
2025-10-14 15:03:19.581 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:03:19.583 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/1?PageNum=2 - 200 null application/json; charset=utf-8 147.271ms
2025-10-14 15:03:28.124 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/1?PageNum=444 - null 0
2025-10-14 15:03:28.129 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:03:28.130 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:03:28.132 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:03:28.187 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:13:48.442 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[@__studentId_1='?' (DbType = Int32), @__classId_Value_2='?' (DbType = Int32), @__Trim_0_contains='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_1 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_2
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
WHERE lower(t.team_name) LIKE @__Trim_0_contains
2025-10-14 17:13:48.456 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:13:48.460 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 218.2345ms
2025-10-14 17:13:48.464 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:13:48.465 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=te&ClassId=1 - 200 null application/json; charset=utf-8 246.7378ms
2025-10-14 17:13:56.061 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=TeST&ClassId=1 - null 0
2025-10-14 17:13:56.065 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:13:56.067 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:13:56.069 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:13:56.123 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:13:56.196 +07:00 [INF] Executed DbCommand (65ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 15:03:28.243 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:03:28.250 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:03:28.253 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 117.7547ms
2025-10-14 15:03:28.255 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:03:28.257 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/1?PageNum=444 - 200 null application/json; charset=utf-8 133.0066ms
2025-10-14 15:06:50.310 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 15:06:50.526 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 15:06:50.527 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 15:06:50.590 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 15:06:50.591 +07:00 [INF] Hosting environment: Development
2025-10-14 15:06:50.592 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 15:06:51.108 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 15:06:51.269 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 170.8746ms
2025-10-14 15:06:51.272 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 15:06:51.285 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 12.7716ms
2025-10-14 15:06:51.382 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 15:06:51.422 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.2103ms
2025-10-14 15:06:51.463 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 15:06:51.485 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 21.5166ms
2025-10-14 15:07:08.224 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/2 - null 0
2025-10-14 15:07:08.235 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:07:08.447 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:07:08.507 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:07:08.526 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 15:07:11.437 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 15:07:13.127 +07:00 [INF] Executed DbCommand (129ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:13:56.255 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__studentId_1='?' (DbType = Int32), @__classId_Value_2='?' (DbType = Int32), @__Trim_0_contains='?'], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_1 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_2
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
WHERE lower(t.team_name) LIKE @__Trim_0_contains
2025-10-14 17:13:56.261 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:13:56.263 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 189.9348ms
2025-10-14 17:13:56.268 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:13:56.270 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?TeamName=TeST&ClassId=1 - 200 null application/json; charset=utf-8 209.0681ms
2025-10-14 17:14:02.627 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1 - null 0
2025-10-14 17:14:02.633 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:14:02.634 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:14:02.636 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:14:02.702 +07:00 [INF] Executed DbCommand (60ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:14:02.857 +07:00 [INF] Executed DbCommand (145ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 15:07:13.544 +07:00 [INF] Executed DbCommand (63ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:07:20.729 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:07:20.744 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 12222.1637ms
2025-10-14 15:07:20.749 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:07:20.753 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/2 - 200 null application/json; charset=utf-8 12529.0227ms
2025-10-14 15:07:27.175 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/1 - null 0
2025-10-14 15:07:27.185 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:07:27.192 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:07:27.195 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:07:27.365 +07:00 [INF] Executed DbCommand (62ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:14:02.926 +07:00 [INF] Executed DbCommand (63ms) [Parameters=[@__studentId_0='?' (DbType = Int32), @__classId_Value_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_1
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
2025-10-14 17:14:02.932 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:14:02.936 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 296.0306ms
2025-10-14 17:14:02.938 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:14:02.940 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1 - 200 null application/json; charset=utf-8 313.1284ms
2025-10-14 17:14:05.295 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1&PageNum=22 - null 0
2025-10-14 17:14:05.306 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 17:14:05.310 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:14:05.312 +07:00 [INF] Route matched with {action = "GetTeamListOfStudent", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListOfStudent(CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 17:14:05.371 +07:00 [INF] Executed DbCommand (54ms) [Parameters=[@__uid_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name, s.student_id, s.address, s.avatar_img, s.fullname, s.major, s.phone_number, s.school, s.student_code, s.yob, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
LEFT JOIN student AS s ON u.u_id = s.student_id
LEFT JOIN lecturer AS l ON u.u_id = l.lecturer_id
WHERE u.u_id = @__uid_0 AND u.is_active
LIMIT 1
2025-10-14 17:14:05.446 +07:00 [INF] Executed DbCommand (67ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
2025-10-14 15:07:27.510 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:07:32.319 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:07:32.334 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 5136.7254ms
2025-10-14 15:07:32.340 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:07:32.343 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/1 - 200 null application/json; charset=utf-8 5168.2802ms
2025-10-14 15:07:36.331 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/1?PageNum=2 - null 0
2025-10-14 15:07:36.339 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:07:36.343 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:07:36.344 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:07:36.417 +07:00 [INF] Executed DbCommand (57ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 15:07:36.473 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:07:41.672 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:07:41.675 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 5328.7668ms
2025-10-14 15:07:41.677 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:07:41.679 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/1?PageNum=2 - 200 null application/json; charset=utf-8 5348.3389ms
2025-10-14 15:07:53.348 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/team/class/1?PageNum=2 - null 0
2025-10-14 15:07:53.364 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 15:07:53.366 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:07:53.368 +07:00 [INF] Route matched with {action = "GetTeamListByAssignClassOfLecturer", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetTeamListByAssignClassOfLecturer(CollabSphere.Application.Features.Team.Queries.GetAllTeamByAssignClass.GetAllTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 15:07:53.510 +07:00 [INF] Executed DbCommand (133ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 17:14:05.534 +07:00 [INF] Executed DbCommand (81ms) [Parameters=[@__studentId_0='?' (DbType = Int32), @__classId_Value_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_1
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
2025-10-14 17:14:05.544 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetAllTeamOfStudent.GetAllTeamOfStudentResult'.
2025-10-14 17:14:05.549 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API) in 233.65ms
2025-10-14 17:14:05.553 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListOfStudent (CollabSphere.API)'
2025-10-14 17:14:05.556 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/student/3?ClassId=1&PageNum=22 - 200 null application/json; charset=utf-8 261.3027ms
2025-10-14 15:07:53.579 +07:00 [INF] Executed DbCommand (55ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id, c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM team AS t
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
LEFT JOIN class_member AS c ON t.team_id = c.team_id
WHERE t.class_id = @__classId_0
ORDER BY t.team_name, t.team_id, p.project_assignment_id, p0.project_id
2025-10-14 15:09:01.307 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Teams.AllTeamByAssignClassDto, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:09:01.316 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API) in 67943.3261ms
2025-10-14 15:09:01.322 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetTeamListByAssignClassOfLecturer (CollabSphere.API)'
2025-10-14 15:09:01.323 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/team/class/1?PageNum=2 - 200 null application/json; charset=utf-8 67975.6466ms
2025-10-14 15:11:35.325 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/class?PageNum=2 - null null
2025-10-14 15:11:35.339 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.ClassController.StaffGetAllClasses (CollabSphere.API)'
2025-10-14 15:11:35.347 +07:00 [INF] Route matched with {action = "StaffGetAllClasses", controller = "Class"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] StaffGetAllClasses(CollabSphere.Application.Features.Classes.Queries.GetAllClasses.GetAllClassesQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.ClassController (CollabSphere.API).
2025-10-14 15:11:35.415 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id, s.is_active, s.subject_code, s.subject_name, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM class AS c
INNER JOIN subject AS s ON c.subject_id = s.subject_id
LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
2025-10-14 15:11:35.435 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Classes.ClassVM, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:11:35.442 +07:00 [INF] Executed action CollabSphere.API.Controllers.ClassController.StaffGetAllClasses (CollabSphere.API) in 91.4756ms
2025-10-14 15:11:35.444 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.ClassController.StaffGetAllClasses (CollabSphere.API)'
2025-10-14 15:11:35.445 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/api/class?PageNum=2 - 200 null application/json; charset=utf-8 119.8417ms
2025-10-14 15:13:04.138 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/class?PageNum=2 - null null
2025-10-14 15:13:04.150 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.ClassController.StaffGetAllClasses (CollabSphere.API)'
2025-10-14 15:13:04.151 +07:00 [INF] Route matched with {action = "StaffGetAllClasses", controller = "Class"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] StaffGetAllClasses(CollabSphere.Application.Features.Classes.Queries.GetAllClasses.GetAllClassesQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.ClassController (CollabSphere.API).
2025-10-14 15:13:04.202 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id, s.is_active, s.subject_code, s.subject_name, l.lecturer_id, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
FROM class AS c
INNER JOIN subject AS s ON c.subject_id = s.subject_id
LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
2025-10-14 15:13:44.243 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Common.PagedList`1[[CollabSphere.Application.DTOs.Classes.ClassVM, CollabSphere.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-10-14 15:13:44.246 +07:00 [INF] Executed action CollabSphere.API.Controllers.ClassController.StaffGetAllClasses (CollabSphere.API) in 40092.949ms
2025-10-14 15:13:44.248 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.ClassController.StaffGetAllClasses (CollabSphere.API)'
2025-10-14 15:13:44.249 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/api/class?PageNum=2 - 200 null application/json; charset=utf-8 40111.4621ms
2025-10-14 21:50:04.840 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 21:50:05.275 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 21:50:05.282 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 21:50:05.460 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 21:50:05.462 +07:00 [INF] Hosting environment: Development
2025-10-14 21:50:05.465 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 21:50:05.935 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 21:50:06.215 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 289.2044ms
2025-10-14 21:50:06.228 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 21:50:06.259 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 31.4749ms
2025-10-14 21:50:06.491 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 21:50:06.572 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 83.0009ms
2025-10-14 21:50:06.644 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 21:50:06.690 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 46.3995ms
2025-10-14 21:50:32.488 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/team/student/class/1 - null null
2025-10-14 21:50:32.743 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-10-14 21:50:32.765 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2025-10-14 21:50:32.772 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/api/team/student/class/1 - 401 0 null 284.3011ms
2025-10-14 21:50:46.528 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 61
2025-10-14 21:50:46.547 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 21:50:46.561 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 21:50:46.631 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CollabSphere.Application.DTOs.User.LoginRequestDTO) on controller CollabSphere.API.Controllers.AuthController (CollabSphere.API).
2025-10-14 21:50:46.646 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 21:50:54.379 +07:00 [INF] Executed DbCommand (200ms) [Parameters=[@__email_0='?', @__password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
WHERE u.email = @__email_0 AND u.password = @__password_1 AND u.is_active
LIMIT 1
2025-10-14 21:50:54.434 +07:00 [INF] Not found any user with Email: triminh0502@gmail.com
2025-10-14 21:50:54.466 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'CollabSphere.Application.DTOs.User.LoginResponseDTO'.
2025-10-14 21:50:54.520 +07:00 [INF] Executed action CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API) in 7873.5031ms
2025-10-14 21:50:54.527 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 21:50:54.607 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 404 null application/json; charset=utf-8 8078.7935ms
2025-10-14 21:51:00.691 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 61
2025-10-14 21:51:00.711 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 21:51:00.717 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 21:51:00.724 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CollabSphere.Application.DTOs.User.LoginRequestDTO) on controller CollabSphere.API.Controllers.AuthController (CollabSphere.API).
2025-10-14 21:51:00.933 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[@__email_0='?', @__password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
WHERE u.email = @__email_0 AND u.password = @__password_1 AND u.is_active
LIMIT 1
2025-10-14 21:51:01.788 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[@p8='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = DateTime), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "user" SET created_date = @p0, email = @p1, is_active = @p2, is_teacher = @p3, password = @p4, refresh_token = @p5, refresh_token_expiry_time = @p6, role_id = @p7
WHERE u_id = @p8;
2025-10-14 21:51:01.954 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.DTOs.User.LoginResponseDTO'.
2025-10-14 21:51:01.964 +07:00 [INF] Executed action CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API) in 1232.2714ms
2025-10-14 21:51:01.972 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 21:51:01.981 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 null application/json; charset=utf-8 1290.1417ms
2025-10-14 21:51:11.641 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/team/student/class/1 - null null
2025-10-14 21:51:11.762 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 21:51:11.780 +07:00 [INF] Route matched with {action = "GetStudentTeamByAssignClas", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentTeamByAssignClas(CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 21:51:16.302 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 21:51:16.559 +07:00 [INF] Executed DbCommand (104ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 21:51:21.755 +07:00 [INF] Executed DbCommand (105ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__studentId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
WHERE c.class_id = @__classId_0 AND c.student_id = @__studentId_1
LIMIT 1
2025-10-14 21:51:34.487 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassResult'.
2025-10-14 21:51:34.507 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API) in 22719.7955ms
2025-10-14 21:51:34.510 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 21:51:34.513 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/api/team/student/class/1 - 500 null application/json; charset=utf-8 22873.4755ms
2025-10-14 21:52:21.941 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/team/student/class/1 - null null
2025-10-14 21:52:21.962 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 21:52:21.967 +07:00 [INF] Route matched with {action = "GetStudentTeamByAssignClas", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentTeamByAssignClas(CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 21:52:27.714 +07:00 [INF] Executed DbCommand (53ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 21:52:30.622 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__studentId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
WHERE c.class_id = @__classId_0 AND c.student_id = @__studentId_1
LIMIT 1
2025-10-14 21:53:43.139 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__studentId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
WHERE c.class_id = @__classId_0 AND c.student_id = @__studentId_1
LIMIT 1
2025-10-14 21:54:57.550 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 21:54:58.087 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 21:54:58.090 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 21:54:58.213 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 21:54:58.217 +07:00 [INF] Hosting environment: Development
2025-10-14 21:54:58.221 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 21:54:58.599 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 21:54:58.870 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 282.7752ms
2025-10-14 21:54:58.877 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 21:54:58.897 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 21.2406ms
2025-10-14 21:54:59.155 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 21:54:59.231 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 76.8992ms
2025-10-14 21:54:59.304 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 21:54:59.352 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 48.7137ms
2025-10-14 21:55:14.016 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 61
2025-10-14 21:55:14.034 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 21:55:14.234 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 21:55:14.299 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CollabSphere.Application.DTOs.User.LoginRequestDTO) on controller CollabSphere.API.Controllers.AuthController (CollabSphere.API).
2025-10-14 21:55:14.312 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 21:55:21.380 +07:00 [INF] Executed DbCommand (326ms) [Parameters=[@__email_0='?', @__password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
WHERE u.email = @__email_0 AND u.password = @__password_1 AND u.is_active
LIMIT 1
2025-10-14 21:55:22.664 +07:00 [INF] Executed DbCommand (60ms) [Parameters=[@p8='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = DateTime), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "user" SET created_date = @p0, email = @p1, is_active = @p2, is_teacher = @p3, password = @p4, refresh_token = @p5, refresh_token_expiry_time = @p6, role_id = @p7
WHERE u_id = @p8;
2025-10-14 21:55:22.946 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.DTOs.User.LoginResponseDTO'.
2025-10-14 21:55:23.016 +07:00 [INF] Executed action CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API) in 8700.8371ms
2025-10-14 21:55:23.023 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 21:55:23.045 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 null application/json; charset=utf-8 9029.136ms
2025-10-14 21:55:58.270 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/team/student/class/1 - null null
2025-10-14 21:55:58.433 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 21:55:58.455 +07:00 [INF] Route matched with {action = "GetStudentTeamByAssignClas", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentTeamByAssignClas(CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 21:56:18.385 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 21:56:18.535 +07:00 [INF] Executed DbCommand (78ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 21:56:28.408 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__studentId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
WHERE c.class_id = @__classId_0 AND c.student_id = @__studentId_1
LIMIT 1
2025-10-14 21:58:20.058 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 21:58:20.571 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 21:58:20.578 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 21:58:20.745 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 21:58:20.749 +07:00 [INF] Hosting environment: Development
2025-10-14 21:58:20.755 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 21:58:21.183 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 21:58:21.429 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 252.0291ms
2025-10-14 21:58:21.436 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 21:58:21.464 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 29.5579ms
2025-10-14 21:58:21.642 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 21:58:21.769 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 127.2299ms
2025-10-14 21:58:21.832 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 21:58:21.897 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 66.6554ms
2025-10-14 21:58:33.912 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 61
2025-10-14 21:58:33.935 +07:00 [INF] No CORS policy found for the specified request.
2025-10-14 21:58:34.100 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 21:58:34.179 +07:00 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CollabSphere.Application.DTOs.User.LoginRequestDTO) on controller CollabSphere.API.Controllers.AuthController (CollabSphere.API).
2025-10-14 21:58:34.199 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 21:58:40.662 +07:00 [INF] Executed DbCommand (259ms) [Parameters=[@__email_0='?', @__password_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT u.u_id, u.created_date, u.email, u.is_active, u.is_teacher, u.password, u.refresh_token, u.refresh_token_expiry_time, u.role_id, r.role_id, r.role_name
FROM "user" AS u
INNER JOIN role AS r ON u.role_id = r.role_id
WHERE u.email = @__email_0 AND u.password = @__password_1 AND u.is_active
LIMIT 1
2025-10-14 21:58:41.734 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[@p8='?' (DbType = Int32), @p0='?' (DbType = DateTime), @p1='?', @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = DateTime), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE "user" SET created_date = @p0, email = @p1, is_active = @p2, is_teacher = @p3, password = @p4, refresh_token = @p5, refresh_token_expiry_time = @p6, role_id = @p7
WHERE u_id = @p8;
2025-10-14 21:58:41.946 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.DTOs.User.LoginResponseDTO'.
2025-10-14 21:58:41.989 +07:00 [INF] Executed action CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API) in 7790.0313ms
2025-10-14 21:58:41.999 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.AuthController.Login (CollabSphere.API)'
2025-10-14 21:58:42.019 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 null application/json; charset=utf-8 8107.3277ms
2025-10-14 21:58:57.054 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/team/student/class/1 - null null
2025-10-14 21:58:57.186 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 21:58:57.210 +07:00 [INF] Route matched with {action = "GetStudentTeamByAssignClas", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentTeamByAssignClas(CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 21:59:02.397 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 21:59:02.661 +07:00 [INF] Executed DbCommand (190ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 21:59:05.179 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__studentId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
WHERE c.class_id = @__classId_0 AND c.student_id = @__studentId_1
LIMIT 1
2025-10-14 21:59:54.509 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 21:59:54.944 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 21:59:54.949 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 21:59:55.093 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 21:59:55.105 +07:00 [INF] Hosting environment: Development
2025-10-14 21:59:55.107 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 21:59:55.503 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 21:59:55.803 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 307.7606ms
2025-10-14 21:59:55.809 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 21:59:55.834 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 25.777ms
2025-10-14 21:59:55.991 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 21:59:56.082 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 91.4672ms
2025-10-14 21:59:56.137 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 21:59:56.182 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 45.1526ms
2025-10-14 22:00:08.502 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/team/student/class/1 - null null
2025-10-14 22:00:08.839 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:00:08.927 +07:00 [INF] Route matched with {action = "GetStudentTeamByAssignClas", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentTeamByAssignClas(CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 22:00:08.944 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 22:00:17.587 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 22:00:19.100 +07:00 [INF] Executed DbCommand (173ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 22:00:22.413 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__studentId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
WHERE c.class_id = @__classId_0 AND c.student_id = @__studentId_1
LIMIT 1
2025-10-14 22:02:24.547 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassResult'.
2025-10-14 22:02:24.581 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API) in 135640.6358ms
2025-10-14 22:02:24.588 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:02:24.599 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/api/team/student/class/1 - 500 null application/json; charset=utf-8 136097.863ms
2025-10-14 22:06:23.275 +07:00 [INF] User profile is available. Using 'C:\Users\minhtri\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-10-14 22:06:23.794 +07:00 [INF] Now listening on: https://localhost:7264
2025-10-14 22:06:23.811 +07:00 [INF] Now listening on: http://localhost:5263
2025-10-14 22:06:23.973 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-10-14 22:06:23.978 +07:00 [INF] Hosting environment: Development
2025-10-14 22:06:23.980 +07:00 [INF] Content root path: D:\SEP490\collab-sphere_BE\CollabSphere\CollabSphere.API
2025-10-14 22:06:24.537 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-10-14 22:06:24.807 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 278.9946ms
2025-10-14 22:06:24.819 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-10-14 22:06:24.854 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16517 application/javascript; charset=utf-8 35.2155ms
2025-10-14 22:06:25.015 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-10-14 22:06:25.083 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 67.9936ms
2025-10-14 22:06:25.141 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-10-14 22:06:25.184 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 43.4274ms
2025-10-14 22:07:40.990 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/team/student/class/2 - null null
2025-10-14 22:07:41.395 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:07:41.465 +07:00 [INF] Route matched with {action = "GetStudentTeamByAssignClas", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentTeamByAssignClas(CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 22:07:41.481 +07:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-10-14 22:07:53.477 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-10-14 22:07:54.961 +07:00 [INF] Executed DbCommand (140ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 22:07:55.348 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__studentId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
WHERE c.class_id = @__classId_0 AND c.student_id = @__studentId_1
LIMIT 1
2025-10-14 22:07:55.382 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassResult'.
2025-10-14 22:07:55.436 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API) in 13956.7022ms
2025-10-14 22:07:55.448 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:07:55.467 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/api/team/student/class/2 - 500 null application/json; charset=utf-8 14477.4437ms
2025-10-14 22:07:59.371 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/team/student/class/123 - null null
2025-10-14 22:07:59.395 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:07:59.401 +07:00 [INF] Route matched with {action = "GetStudentTeamByAssignClas", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentTeamByAssignClas(CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 22:08:00.943 +07:00 [INF] Executed DbCommand (61ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 22:08:00.949 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassResult'.
2025-10-14 22:08:00.955 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API) in 1542.6973ms
2025-10-14 22:08:00.959 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:08:00.963 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/api/team/student/class/123 - 500 null application/json; charset=utf-8 1592.5522ms
2025-10-14 22:08:04.531 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/team/student/class/1 - null null
2025-10-14 22:08:04.556 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:08:04.561 +07:00 [INF] Route matched with {action = "GetStudentTeamByAssignClas", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentTeamByAssignClas(CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 22:08:05.862 +07:00 [INF] Executed DbCommand (53ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 22:08:06.018 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__studentId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
WHERE c.class_id = @__classId_0 AND c.student_id = @__studentId_1
LIMIT 1
2025-10-14 22:08:08.006 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[@__studentId_0='?' (DbType = Int32), @__classId_Value_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_1
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
2025-10-14 22:08:08.023 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassResult'.
2025-10-14 22:08:08.043 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API) in 3476.2499ms
2025-10-14 22:08:08.053 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:08:08.060 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/api/team/student/class/1 - 200 null application/json; charset=utf-8 3530.0039ms
2025-10-14 22:08:22.871 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/team/student/class/2 - null null
2025-10-14 22:08:22.882 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:08:22.887 +07:00 [INF] Route matched with {action = "GetStudentTeamByAssignClas", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentTeamByAssignClas(CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 22:08:23.982 +07:00 [INF] Executed DbCommand (79ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 22:08:24.041 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__studentId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
WHERE c.class_id = @__classId_0 AND c.student_id = @__studentId_1
LIMIT 1
2025-10-14 22:08:24.047 +07:00 [INF] Executing ObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassResult'.
2025-10-14 22:08:24.053 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API) in 1156.4119ms
2025-10-14 22:08:24.057 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:08:24.060 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/api/team/student/class/2 - 500 null application/json; charset=utf-8 1190.0741ms
2025-10-14 22:08:42.857 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7264/api/team/student/class/1 - null null
2025-10-14 22:08:42.866 +07:00 [INF] Executing endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:08:42.871 +07:00 [INF] Route matched with {action = "GetStudentTeamByAssignClas", controller = "Team"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStudentTeamByAssignClas(CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassQuery, System.Threading.CancellationToken) on controller CollabSphere.API.Controllers.TeamController (CollabSphere.API).
2025-10-14 22:08:49.474 +07:00 [INF] Executed DbCommand (53ms) [Parameters=[@__classId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT s1.class_id, s1.class_name, s1.created_date, s1.enrol_key, s1.is_active, s1.lecturer_id, s1.lecturer_name, s1.member_count, s1.subject_id, s1.team_count, s1.subject_id0, s1.is_active0, s1.subject_code, s1.subject_name, s1.lecturer_id0, s1.address, s1.avatar_img, s1.fullname, s1.lecturer_code, s1.major, s1.phone_number, s1.school, s1.yob, s2.class_member_id, s2.class_id, s2.fullname, s2.is_grouped, s2.status, s2.student_id, s2.team_id, s2.team_role, s2.student_id0, s2.address, s2.avatar_img, s2.fullname0, s2.major, s2.phone_number, s2.school, s2.student_code, s2.yob, c1.file_id, c1.class_id, c1.file_path, c1.type, s3.project_assignment_id, s3.assigned_date, s3.class_id, s3.project_id, s3.status, s3.project_id0, s3.description, s3.lecturer_id, s3.project_name, s3.status0, s3.subject_id, s4.team_id, s4.class_id, s4.created_date, s4.description, s4.end_date, s4.enrol_key, s4.git_link, s4.leader_id, s4.lecturer_id, s4.lecturer_name, s4.progress, s4.project_assignment_id, s4.status, s4.team_image, s4.team_name, s4.project_assignment_id0, s4.assigned_date, s4.class_id0, s4.project_id, s4.status0, s4.project_id0, s4.description0, s4.lecturer_id0, s4.project_name, s4.status1, s4.subject_id
FROM (
    SELECT c.class_id, c.class_name, c.created_date, c.enrol_key, c.is_active, c.lecturer_id, c.lecturer_name, c.member_count, c.subject_id, c.team_count, s.subject_id AS subject_id0, s.is_active AS is_active0, s.subject_code, s.subject_name, l.lecturer_id AS lecturer_id0, l.address, l.avatar_img, l.fullname, l.lecturer_code, l.major, l.phone_number, l.school, l.yob
    FROM class AS c
    INNER JOIN subject AS s ON c.subject_id = s.subject_id
    LEFT JOIN lecturer AS l ON c.lecturer_id = l.lecturer_id
    WHERE c.class_id = @__classId_0
    LIMIT 1
) AS s1
LEFT JOIN (
    SELECT c0.class_member_id, c0.class_id, c0.fullname, c0.is_grouped, c0.status, c0.student_id, c0.team_id, c0.team_role, s0.student_id AS student_id0, s0.address, s0.avatar_img, s0.fullname AS fullname0, s0.major, s0.phone_number, s0.school, s0.student_code, s0.yob
    FROM class_member AS c0
    INNER JOIN student AS s0 ON c0.student_id = s0.student_id
) AS s2 ON s1.class_id = s2.class_id
LEFT JOIN class_file AS c1 ON s1.class_id = c1.class_id
LEFT JOIN (
    SELECT p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id AS project_id0, p0.description, p0.lecturer_id, p0.project_name, p0.status AS status0, p0.subject_id
    FROM project_assignment AS p
    INNER JOIN project AS p0 ON p.project_id = p0.project_id
) AS s3 ON s1.class_id = s3.class_id
LEFT JOIN (
    SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, p1.project_assignment_id AS project_assignment_id0, p1.assigned_date, p1.class_id AS class_id0, p1.project_id, p1.status AS status0, p2.project_id AS project_id0, p2.description AS description0, p2.lecturer_id AS lecturer_id0, p2.project_name, p2.status AS status1, p2.subject_id
    FROM team AS t
    LEFT JOIN project_assignment AS p1 ON t.project_assignment_id = p1.project_assignment_id
    LEFT JOIN project AS p2 ON p1.project_id = p2.project_id
) AS s4 ON s1.class_id = s4.class_id
ORDER BY s1.class_id, s1.subject_id0, s1.lecturer_id0, s2.class_member_id, s2.student_id0, c1.file_id, s3.project_assignment_id, s3.project_id0, s4.team_id, s4.project_assignment_id0
2025-10-14 22:08:49.533 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[@__classId_0='?' (DbType = Int32), @__studentId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.class_member_id, c.class_id, c.fullname, c.is_grouped, c.status, c.student_id, c.team_id, c.team_role
FROM class_member AS c
WHERE c.class_id = @__classId_0 AND c.student_id = @__studentId_1
LIMIT 1
2025-10-14 22:08:49.590 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[@__studentId_0='?' (DbType = Int32), @__classId_Value_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.team_id, t.class_id, t.created_date, t.description, t.end_date, t.enrol_key, t.git_link, t.leader_id, t.lecturer_id, t.lecturer_name, t.progress, t.project_assignment_id, t.status, t.team_image, t.team_name, c1.class_id, c1.class_name, c1.created_date, c1.enrol_key, c1.is_active, c1.lecturer_id, c1.lecturer_name, c1.member_count, c1.subject_id, c1.team_count, p.project_assignment_id, p.assigned_date, p.class_id, p.project_id, p.status, p0.project_id, p0.description, p0.lecturer_id, p0.project_name, p0.status, p0.subject_id
FROM team AS t
INNER JOIN (
    SELECT c.team_id
    FROM class_member AS c
    WHERE c.student_id = @__studentId_0 AND c.team_id IS NOT NULL AND c.class_id = @__classId_Value_1
) AS c0 ON t.team_id = c0.team_id
INNER JOIN class AS c1 ON t.class_id = c1.class_id
LEFT JOIN project_assignment AS p ON t.project_assignment_id = p.project_assignment_id
LEFT JOIN project AS p0 ON p.project_id = p0.project_id
2025-10-14 22:08:49.608 +07:00 [INF] Executing OkObjectResult, writing value of type 'CollabSphere.Application.Features.Team.Queries.GetStudentTeamByAssignClass.GetStudentTeamByAssignClassResult'.
2025-10-14 22:08:49.617 +07:00 [INF] Executed action CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API) in 6737.6786ms
2025-10-14 22:08:49.642 +07:00 [INF] Executed endpoint 'CollabSphere.API.Controllers.TeamController.GetStudentTeamByAssignClas (CollabSphere.API)'
2025-10-14 22:08:49.648 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7264/api/team/student/class/1 - 200 null application/json; charset=utf-8 6791.8831ms
